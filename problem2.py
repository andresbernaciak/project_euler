#projecteuler.net
#
#problem2
#========
#
#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

i = 1
f_series = [1,2]
f_number = 0
sum_even_numbers = 2

while f_number <= 4000000:
    i += 1
    f_number = (f_series[i-1]+f_series[i-2])
    f_series.append(f_number)
    if f_number % 2 == 0:
        sum_even_numbers += f_number

print(sum_even_numbers)

# another way by generating only the even fibonacci numbers

f = 0
f_2 = 2
f_1 = 8
accum = f_1 + f_2
while True:
    f = f_1*4 + f_2
    if f < 4000000:
        accum += f
        f_2, f_1 = f_1, f
    else:
        break
print(accum)


    

